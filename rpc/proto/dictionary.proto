syntax = "proto3";
package dictionary;

service Dictionary {
    rpc GetWordDefinitions (GetWordDefinitionsRequest) returns (GetWordDefinitionsResponse);
    rpc InvalidateWord (InvalidateWordRequest) returns (InvalidateWordResponse);
    rpc GetAudio (GetAudioRequest) returns (GetAudioResponse);
}

message GetWordDefinitionsRequest {
    string word = 1;
}

message GetWordDefinitionsResponse {
    string word = 1; 
    VocabularyWord vocabulary = 2;
}

message VocabularyWord {
  string header = 1;
  repeated Pronunciation pronunciations = 2;
  repeated string other_forms = 3;
  string short_description = 4;
  string long_description = 5;
  repeated VocabularyDefinition definitions = 6;
  repeated VocabularyExample examples = 7;
}



message Pronunciation {
  enum PronunciationVariant {
    Uk = 0;
    Usa = 1;
    Other = 2;
  }

  PronunciationVariant variant = 1; 
  string ipa_str = 2;
  optional string audio_id = 3;
}

message VocabularyDefinition { 
  enum KnownWordVariant {
    Noun = 0;
    Verb = 1;
    Adjective = 2;
    Adverb = 3;
  }

  oneof WordVariant {
    KnownWordVariant word_variant = 1;
    string other_word_variant = 2;
  }    

  string description = 6;
  repeated string short_examples = 7;
  repeated string synonyms = 8;
}

message VocabularyExample {
  string sentence = 1;
  string author = 2;
  string source_title = 3;
}

message InvalidateWordRequest {
  string word = 1;
}

message InvalidateWordResponse {
    bool success = 1;
}

message GetAudioRequest {
  string id = 1;
}

message GetAudioResponse {
  string word = 1;
  string content_type = 2;
  bytes bytes = 3;
}
