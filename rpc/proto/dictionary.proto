syntax = "proto3";
package dictionary;

service Dictionary {
    rpc GetWordDefinitions (GetWordDefinitionsRequest) returns (GetWordDefinitionsResponse);
    rpc InvalidateWord (InvalidateWordRequest) returns (InvalidateWordResponse);
    rpc GetAudio (GetAudioRequest) returns (GetAudioResponse);
}

message GetWordDefinitionsRequest {
    string word = 1;
}

message GetWordDefinitionsResponse {
    string word = 1; 
    VocabularyDefinition vocabulary_definition = 2;
    OxfordDefinition oxford_definition = 3;
}

message VocabularyDefinition {
  string id = 1;
  string header = 2;
  repeated Pronunciation pronunciations = 3;
  repeated string other_forms = 4;
  string short_description = 5;
  string long_description = 6;
  repeated VocabularySubDefinition definitions = 7;
  repeated VocabularyExample examples = 8;
}

message OxfordDefinition {
  string id = 1;
  string oxford_ref = 2;
  string header = 3;
  string inflections = 4;
  string note = 5;
  string word_variant = 6;
  string word_origin = 7;
  repeated WordRef similar_results = 8;
  repeated Pronunciation pronunciations = 9;
  repeated DefinitionGroup definitions = 10;
  repeated WordRef see_also = 11;
  repeated Idiom idioms = 12;
  repeated WordRef phrasal_verbs = 13;
}

message Idiom {
  string idiom = 1;
  string description = 2;
  repeated string notes = 3;
  repeated WordRef synonyms = 4;
  repeated string examples = 5;
}

message WordRef {
  string oxford_ref = 1;
  string word = 2;
}

message DefinitionGroup {
  string group_title = 1;
  repeated SubDefinition definitions = 2;
}

message SubDefinition {
  string description = 1;
  string use_note = 2;
  repeated string examples = 3;
  repeated WordRef see_also = 4;
  repeated WordRef synonyms = 5;
  repeated string extra_examples = 6;
  repeated string extra_synonyms = 7;
}

message Pronunciation {
  enum PronunciationVariant {
    Uk = 0;
    Usa = 1;
    Other = 2;
  }

  PronunciationVariant variant = 1; 
  string ipa_str = 2;
  optional string audio_id = 3;
}

message VocabularySubDefinition { 
  enum KnownWordVariant {
    Noun = 0;
    Verb = 1;
    Adjective = 2;
    Adverb = 3;
  }

  oneof WordVariant {
    KnownWordVariant word_variant = 1;
    string other_word_variant = 2;
  }    

  string description = 6;
  repeated string short_examples = 7;
  repeated string synonyms = 8;
}

message VocabularyExample {
  string sentence = 1;
  string author = 2;
  string source_title = 3;
}

message InvalidateWordRequest {
  string word = 1;
}

message InvalidateWordResponse {
    bool success = 1;
}

message GetAudioRequest {
  string id = 1;
}

message GetAudioResponse {
  string word = 1;
  string content_type = 2;
  bytes bytes = 3;
}
